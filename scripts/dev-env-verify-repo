#!/bin/bash

source "$PATH_DEV_ENV/scripts/dev-env-detect-shell"

eval $(ssh-agent -s) > /dev/null 2>&1
trap 'kill $SSH_AGENT_PID' EXIT
trap 'kill $SSH_AGENT_PID' INT
trap 'kill $SSH_AGENT_PID' TERM

echo "Staging ssh key for git operations..."
if [ ! -f ~/.ssh/id_ed25519 ]; then
    echo -e "${RED}SSH key not found at ~/.ssh/id_ed25519. Expecting SSH key for git authentication, skipping git interop.${NC}"
    return
else
    ssh-add ~/.ssh/id_ed25519 2>/dev/null
    echo -e "${GREEN}SSH key staged successfully.${NC}"
fi


if ! grep -q "PATH_DEV_ENV" ~/."$shell"rc; then
    DEV_ENV_PATH="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
    PATH_DEV_ENV="$DEV_ENV_PATH"
    echo "export PATH_DEV_ENV=\"$DEV_ENV_PATH\"" >>~/."$shell"rc
else
    echo "PATH_DEV_ENV already set in your rc file."
fi

cd $PATH_DEV_ENV

echo "Checking for updates..."
git fetch origin
current_branch=$(git rev-parse --abbrev-ref HEAD)
commits_behind=$(git rev-list --count HEAD..origin/$current_branch)
if [ "$commits_behind" -gt 0 ]; then
    echo "Updates available. Pulling latest changes..."
    git pull
else
    echo "No updates available."
fi

echo "$PERMS_DEV_ENV"

if [ "$PERMS_DEV_ENV" == "owner" ] || [ "$PERMS_DEV_ENV" == "inherit" ]; then
    if git status | grep -q "nothing to commit"; then
        echo "No changes, proceeding with update..."
    else
        echo -e "${YELLOW}There are changes to your configs, would you like to commit/push these changes to vc? (Y/n)${NC}"
        read resp
        if [[ ! $resp =~ ^[Yy]$ ]]; then
            echo -e "${YELLOW}Skipping commit/push of changes.${NC}"
        else
            git add .
            git commit -m "New updates to configs" 2>/dev/null
            git push 2>/dev/null
        fi
    fi
fi
